[b]TrueSosachOS version0.01 THREAD № [/b]

[b]ПИШЕМ ОС УРОВНЯ /Б/ ВСЕМ ДВАЧЕМ[/b]

Кратко:
Бессовестно спиздив сорцы ПЕРВОЙ РУCCКОЙ ОСИ: https://vk.com/offical_russianos у школьника: https://vk.com/nicolaypetrov10 , анон принялся пилить собственную ось. 

В настоящий момент идёт бурная дискуссия по разработке САМОЙ ЛУЧШЕЙ В МИРЕ ОС с гомониграми и йобами.

[b]В тред призываются программист-куны, дизайнер-куны а так же ВСЕ ОСТАЛЬНЫЕ молодые и шутливые.[/b]

[b]Организация GitHub:[/b] https://github.com/SosachOSTeam 
[b]Репозиторий с ядром SosachOS:[/b] https://github.com/SosachOSTeam/BitardGiny
[b]Репозиторий SosachOS:[/b] https://github.com/SosachOSTeam/SosachOS
[b]Репозиторий с ядром школьника:[/b] https://github.com/SosachOSTeam/russianos/

[b]Исходник шапки:[/b] https://github.com/SosachOSTeam/2ch/blob/master/oppost

[b]F.A.Q:[/b]
[i]Вы что, ебанутые? Вы что делаете?[/i]
Свою ОСь с блекджеком и шлюхами. Пока что всё держится на небольшой группе анонов и онли just for lulz
[i]Нахуя вы это делаете?[/i]
Исключительно ради лулзов. 
[i]Ваша ось - очередной линукс?[/i]
Нет, мы пилим свое ядро.
[i]Я нихуя не умею, могу ли я помочь?[/i]
Если есть толковые идеи, то можешь делиться. Ну и конечно прославляй анона и распространяй тему.
[i]Чего вы добились?[/i]
Пока активно обсуждаем планы разработки ОС, а так же ищем новых программистов, дизайнеров и других интересных личностей.


Ядро:
обработка прерываний;
Запилить обработчики прерываний, свой аналог IDT, повесить через асм на проц.
создание и уничтожение процессов;
Да, придется поебаться, покурить мануалы. Проц в protected, все дела. 
переключение процессов из состояния в состояние;
3 состояния- foreground,background и sleep. Соответственно, ресурсы даем форграунду. Если осталось- бекграунд. Слип- все с ОП сохранено на диске, проц не активен. 
диспетчирование ;
Обычный таскменеджер. 
приостановка и активизация процессов ;
По минимизации.
синхронизация процессов ;
Перед доступом к ФС (или ОП) проверяем, не занят ли этот блок другим процессом. И никаких хаков/дебагов. 
организация взаимодействия между процессами;
Прав прибить проц нету ни у кого кроме ядра и юзера по кнопке крестик. А так, через ОП взаимодействуем.
манипулирование блоками управления процессами;
Нинужно.
поддержка операций ввода-вывода;
И/О консолька по стандарту. Опционально прикрутить драйвера мыши+экрана.
поддержка распределения и перераспределения памяти;
Кастомный манагер памяти, пилил на С- ничего сложного.
поддержка работы файловой системы ;
Да, поддержку хотя бы стандартных ФАТ32 и ext2 надо добавить.
поддержка механизма вызова-возврата при обращении к проце­дурам;
CTRL+C вырубает задачу же.
поддержка определенных функций по ведению учета работы
Лог системы в файл в дебаг сборке ядра.

ОС:
Основные функции:
Исполнение запросов программ (ввод и вывод данных, запуск и остановка других программ, выделение и освобождение дополнительной памяти и др.).
Придумать исполняемый файл- формат оглавления, хотя бы. А дальше прост бинарник проца. Укажем минимально нужную версию ОС, инфу по процу и ОП(минимальным).
Загрузка программ в оперативную память и их выполнение.
Используем ядро, пилим АПИ, ничего сложного.
Стандартизованный доступ к периферийным устройствам (устройства ввода-вывода).
Опять же, ядро и драйвера.
Управление оперативной памятью (распределение между процессами, организация виртуальной памяти).
Оставим ядру саму ОП. А виртуальную- это да, надо запилить свап.
Управление доступом к данным на энергонезависимых носителях (таких как жёсткий диск, оптические диски и др.), организованным в той или иной файловой системе.
Драйвера.
Обеспечение пользовательского интерфейса.
В последнюю очередь. Хотя, это не тяжело- повесить курсор+картинку на фон. Запилить на плюсах аналог explorer-a,
Сохранение информации об ошибках системы.
Сохраняем лог в дебаг режиме.

Дополнительные функции:
Параллельное или псевдопараллельное выполнение задач (многозадачность).
Нужна.
Эффективное распределение ресурсов вычислительной системы между процессами.
Все будет, но не сразу. На фогргаунд проц- акцент.
Разграничение доступа различных процессов к ресурсам.
В ядре.
Организация надёжных вычислений (невозможности одного вычислительного процесса намеренно или по ошибке повлиять на вычисления в другом процессе), основана на разграничении доступа к ресурсам.
Проц имеет доступ только к "незанятой" другим процом ОП.
Взаимодействие между процессами: обмен данными, взаимная синхронизация.
Через свободную оп.
Защита самой системы, а также пользовательских данных и программ от действий пользователей (злонамеренных или по незнанию) или приложений.
Запрос подтверждения/пароля при выполнении потенциально опасных действий. Запрос предоставить приложениям разрешение на действия.
Многопользовательский режим работы и разграничение прав доступа (см.: аутентификация, авторизация).
Почему бы и нет? Можно.

[b]ПРОШЛЫЕ ТРЕДЫ[/b]
%%Несколько тредов проебаны из-за школьников с их васяносборками Линукс, так что их считаем не легитимными.%%
№0: http://arhivach.org/thread/140524/ Было принято решение начать разработку
№1: http://arhivach.org/thread/140524/
№2: http://arhivach.org/thread/140668/
№3: http://arhivach.org/thread/140759/
